name: 'ci'
on:
  push:
    branches:
      - '**'
      - '!renovate/**'
    paths-ignore:
      - README.md
      - CONTRIBUTING.md
  pull_request:
    branches:
      - '**'
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build the package
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - run: pnpm install
        env:
          CYPRESS_INSTALL_BINARY: 0
      - run: pnpm build

      # Use cache to share the output across different jobs
      # No need to cache node_modules because they are all bundled
      - uses: actions/cache/save@v3
        id: cache
        with:
          path: outfile.cjs
          key: ${{ github.sha }}-${{ hashFiles('pnpm-lock.yaml') }}

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18]
        flag-for-ts: ['--typescript', '']
        flag-for-jsx: ['--jsx', '']
        flag-for-router: ['--router', '']
        flag-for-pinia: ['--pinia', '']
        flag-for-vitest: ['--vitest', '']
        flag-for-e2e: ['--cypress', '--playwright', '']
        flag-for-linter-and-formatter: ['--eslint', '--eslint --prettier', '']
        include:
          - node-version: 14
            os: ubuntu-latest
          - node-version: 16
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.os == 'windows-latest' }}
    env:
      FEATURE_FLAGS: ${{ matrix.flag-for-ts }} ${{ matrix.flag-for-jsx }} ${{ matrix.flag-for-router }} ${{ matrix.flag-for-pinia }} ${{ matrix.flag-for-vitest }} ${{ matrix.flag-for-e2e }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - uses: actions/cache/restore@v3
        id: cache-restore
        with:
          path: outfile.cjs
          key: ${{ github.sha }}-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Build the package on cache miss
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install && pnpm build
        env:
          CYPRESS_INSTALL_BINARY: 0

      - if: ${{ (contains(env.FEATURE_FLAGS, '--')) }}
        name: Create the sample project with feature flags
        run: node ./outfile.cjs sample-project ${{ env.FEATURE_FLAGS }}

      - if: ${{ !(contains(env.FEATURE_FLAGS, '--')) }}
        name: Create the sample project with default options
        run: node ./outfile.cjs sample-project --default

      - name: Move the sample project to the upper-level directory
        run: mv sample-project ../sample-project

      - name: Install dependencies in the sample project
        working-directory: ../sample-project
        run: pnpm install

      - if: ${{ contains(matrix.flag-for-vitest, '--') }}
        name: Run unit test script
        run: pnpm test:unit

      - if: ${{ contains(matrix.flag-for-e2e, '--cypress') }}
        name: Run Cypress with dev server
        run: pnpm test:e2e:dev

      - name: Run build script
        run: pnpm build

      - if: ${{ contains(matrix.flag-for-e2e, '--') }}
        name: Run e2e test script
        run: pnpm test:e2e
